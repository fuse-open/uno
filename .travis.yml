matrix:
  include:
    # - os: osx
    #   osx_image: xcode9.2
    #   language: csharp
    #   mono: latest
    #   env: TARGET=dotnet
    - os: osx
      language: csharp
      mono: latest
      env: TARGET=ios-sim
      before_script:
        - export SKIP_LIB_TESTS=1
        - export UNO_TEST_ARGS="-DDEBUG_UNSAFE --build-only"
    # - os: osx
    #   osx_image: xcode9.2
    #   language: csharp
    #   mono: latest
    #   env: TARGET=native
    #   before_script:
    #     - export UNO_TEST_ARGS=-DDEBUG_UNSAFE
    - os: linux
      dist: bionic
      env: TARGET=native
      addons:
        apt:
          packages:
            - libsdl2-dev
            - libglew-dev
            - uuid-dev
      services:
        - xvfb
      before_script:
        - export GALLIUM_DRIVER=softpipe
        - export LIBGL_ALWAYS_SOFTWARE=true
        - export UNO_TEST_ARGS=-DDEBUG_UNSAFE
        # Install Mono.
        - sudo apt install gnupg ca-certificates
        - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        - echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
        - sudo apt update
        - sudo apt install mono-devel msbuild nuget

before_script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      ulimit -c unlimited -S
    fi

script:
  - npm install
  - npm pack --silent
  - npm test $TARGET

after_failure:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      for c in $(ls /cores/core.*); do
        lldb -c $c -o "bt all" -b;
      done
    fi
