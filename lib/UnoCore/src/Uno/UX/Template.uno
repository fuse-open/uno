
namespace Uno.UX
{
	/** Base class for objects that can create new objects of a certain kind. 
		
		This class is abstract and must be subclassed before it can be instantiated.

		Subclasses are typically generated by the UX compiler as factory objects
		that capture scopes within an UX document, for example within an iterator, or
		by explicitly using the `ux:Template` attribute.
	*/
    public abstract class Template
    {
        readonly string _key;
        /** A key that can be used to identify this template at runtime. */
        public string Key { get { return _key; } }

        readonly bool _isDefault;
        /** Whether this template should be considered the default template within a collection */
        public bool IsDefault { get { return _isDefault; } }

        protected Template(string key, bool isDefault)
        {
            _key = key;
            _isDefault = isDefault;
        }

        /** Creates a new instance of this template. */
        public abstract object New();
    }
}
