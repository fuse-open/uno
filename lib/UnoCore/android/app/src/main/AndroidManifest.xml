<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
          @(androidManifest.manifestAttribute:join('\n          '))
          package="@(activity.package)">

    #if @(project.android.supportsScreens.resizable:isSet) || @(project.android.supportsScreens.smallScreens:isSet) || @(project.android.supportsScreens.normalScreens:isSet) || @(project.android.supportsScreens.largeScreens:isSet) || @(project.android.supportsScreens.xLargeScreens:isSet) || @(project.android.supportsScreens.anyDensity:isSet) || @(project.android.supportsScreens.requiresSmallestWidthDp:isSet) || @(project.android.supportsScreens.compatibleWidthLimitDp:isSet) || @(project.android.supportsScreens.largestWidthLimitDp:isSet)
    <supports-screens
                  #if @(project.android.supportsScreens.resizable:isSet)
                  android:resizeable="@(project.android.supportsScreens.resizable:toLower)"
                  #endif
                  #if @(project.android.supportsScreens.smallScreens:isSet)
                  android:smallScreens="@(project.android.supportsScreens.smallScreens:toLower)"
                  #endif
                  #if @(project.android.supportsScreens.normalScreens:isSet)
                  android:normalScreens="@(project.android.supportsScreens.normalScreens:toLower)"
                  #endif
                  #if @(project.android.supportsScreens.largeScreens:isSet)
                  android:largeScreens="@(project.android.supportsScreens.largeScreens:toLower)"
                  #endif
                  #if @(project.android.supportsScreens.xLargeScreens:isSet)
                  android:xlargeScreens="@(project.android.supportsScreens.xLargeScreens:toLower)"
                  #endif
                  #if @(project.android.supportsScreens.anyDensity:isSet)
                  android:anyDensity="@(project.android.supportsScreens.anyDensity:toLower)"
                  #endif
                  #if @(project.android.supportsScreens.requiresSmallestWidthDp:isSet)
                  android:requiresSmallestWidthDp="@(project.android.supportsScreens.requiresSmallestWidthDp)"
                  #endif
                  #if @(project.android.supportsScreens.compatibleWidthLimitDp:isSet)
                  android:compatibleWidthLimitDp="@(project.android.supportsScreens.compatibleWidthLimitDp)"
                  #endif
                  #if @(project.android.supportsScreens.largestWidthLimitDp:isSet)
                  android:largestWidthLimitDp="@(project.android.supportsScreens.largestWidthLimitDp)"
                  #endif
                  />
    #endif

#if @(project.android.supportsAndroidGo:test(1, 0))
    <uses-feature android:name="android.hardware.ram.low" android:required="true"/>
#endif
    <uses-feature android:glEsVersion="0x00020000"/>

#if @(project.android.usesFeatures.androidHardwareLocation:isSet)
    <uses-feature android:name="android.hardware.location" android:required="@(project.android.usesFeatures.androidHardwareLocation:bool:toLower)"/>
#endif
#if @(project.android.usesFeatures.androidHardwareLocationGPS:isSet)
    <uses-feature android:name="android.hardware.location.gps" android:required="@(project.android.usesFeatures.androidHardwareLocationGPS:bool:toLower)"/>
#endif
#if @(project.android.usesFeatures.androidHardwareLocationNetwork:isSet)
    <uses-feature android:name="android.hardware.location.network" android:required="@(project.android.usesFeatures.androidHardwareLocationNetwork:bool:toLower)"/>
#endif
#if @(project.android.usesFeatures.androidHardwareCamera:isSet)
    <uses-feature android:name="android.hardware.camera" android:required="@(project.android.usesFeatures.androidHardwareCamera:bool:toLower)"/>
#endif
#if @(project.android.usesFeatures.androidHardwareCameraAutofocus:isSet)
    <uses-feature android:name="android.hardware.camera.autofocus" android:required="@(project.android.usesFeatures.androidHardwareCameraAutofocus:bool:toLower)"/>
#endif
#if @(project.android.usesFeatures.androidHardwareMicrophone:isSet)
    <uses-feature android:name="android.hardware.microphone" android:required="@(project.android.usesFeatures.androidHardwareMicrophone:bool:toLower)"/>
#endif
#if @(project.android.usesFeatures.androidHardwareTelephony:isSet)
    <uses-feature android:name="android.hardware.telephony" android:required="@(project.android.usesFeatures.androidHardwareTelephony:bool:toLower)"/>
#endif
#if @(project.android.usesFeatures.androidHardwareScreenPortrait:isSet)
    <uses-feature android:name="android.hardware.screen.portrait" android:required="@(project.android.usesFeatures.androidHardwareScreenPortrait:bool:toLower)"/>
#endif
#if @(project.android.usesFeatures.androidHardwareScreenLandscape:isSet)
    <uses-feature android:name="android.hardware.screen.landscape" android:required="@(project.android.usesFeatures.androidHardwareScreenLandscape:bool:toLower)"/>
#endif
#if @(project.android.usesFeatures.androidSoftwareWebview:isSet)
    <uses-feature android:name="android.software.webview" android:required="@(project.android.usesFeatures.androidSoftwareWebview:bool:toLower)"/>
#endif
#if @(project.android.geo.apiKey:isSet)
    <queries>
        <package android:name="com.google.android.apps.maps" />
    </queries>
#endif

    @(androidManifest.permission:join('\n    ', '<uses-permission android:name="', '" />'))
    @(androidManifest.rootElement:join('\n    '))

#if @(LIBRARY:defined)
    <application android:description="@string/description">
#else
    <application android:label="@string/app_name"

    #if @(USE_ADAPTIVE_ICON:defined) || @(USE_ROUND_ADAPTIVE_ICON:defined)
                 android:icon="@mipmap/icon"
      #if @(USE_ROUND_ADAPTIVE_ICON:defined)
                 android:roundIcon="@mipmap/icon_round"
      #endif
    #else
      #if @(project.android.icons.vector:isSet)
                 android:icon="@drawable/icon"
      #else
                 android:icon="@mipmap/icon"
      #endif
    #endif
                 android:description="@string/description"
                 android:largeHeap="@(project.android.largeHeap:isSet:test(@(project.android.largeHeap:bool),false))"
                 android:allowBackup="@(project.android.allowBackup:isSet:test(@(project.android.allowBackup:bool),false))"
                 android:usesCleartextTraffic="@(project.android.usesCleartextTraffic:isSet:test(@(project.android.usesCleartextTraffic:bool),false))"
                 android:hardwareAccelerated="@(project.android.hardwareAccelerated:isSet:test(@(project.android.hardwareAccelerated:bool),true))"
                 android:extractNativeLibs="@(project.android.extractNativeLibs:isSet:test(@(project.android.extractNativeLibs:bool),true))"
                 android:requestLegacyExternalStorage="@(project.android.requestLegacyExternalStorage:isSet:test(@(project.android.requestLegacyExternalStorage:bool),false))"
                 @(androidManifest.applicationAttribute:join('\n                 '))
                 >

        <activity android:name="@(activity.name:escapeXml)"
                  android:label="@(project.android.applicationLabel:escapeXml)"
                  android:launchMode="singleTask"
                  android:hardwareAccelerated="@(project.android.hardwareAccelerated:isSet:test(@(project.android.hardwareAccelerated:bool),true))"
                  android:exported="@(project.android.exported:isSet:test(@(project.android.exported:bool),true))"
#if @(ANDROIDMANIFEST.DISABLETHEME:defined)
                  android:theme="@style/AppTheme"
#else
                  android:theme="@style/Theme.AppCompat"
#endif
                  android:taskAffinity=""
                  android:windowSoftInputMode="adjustResize"
                  android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize|uiMode"
#if @(project.mobile.orientations:equals('Portrait'))
                  android:screenOrientation="portrait"
#elif @(project.mobile.orientations:equals('LandscapeLeft'))
                  android:screenOrientation="landscape"
#elif @(project.mobile.orientations:equals('LandscapeRight'))
                  android:screenOrientation="reverseLandscape"
#elif @(project.mobile.orientations:equals('Landscape'))
                  android:screenOrientation="sensorLandscape"
#else
                  android:screenOrientation="user"
#endif
                  android:windowActionBar="false"
                  @(androidManifest.activityAttribute:join('\n                  '))
                  >
            <meta-data android:name="android.app.lib_name" android:value="@(activity.name:escapeXml)" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter tools:ignore="AppLinkUrlError">
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
#if @(project.mobile.uriScheme:isSet)
                <data android:scheme="@(project.mobile.uriScheme)"/>
#endif
                @(androidManifest.activity.viewIntentFilter:join('\n    ', '<data ', '/>'))
            </intent-filter>

#if @(project.android.associatedDomains:isSet)
            <intent-filter android:autoVerify="true">
              <action android:name="android.intent.action.VIEW" />
              <category android:name="android.intent.category.DEFAULT" />
              <category android:name="android.intent.category.BROWSABLE" />
              @(project.android.associatedDomains:splitAndJoin('\n\t\t', '<data android:scheme="http" android:host="','" />'))
              @(project.android.associatedDomains:splitAndJoin('\n\t\t', '<data android:scheme="https" android:host="','" />'))
            </intent-filter>
#endif

            @(androidManifest.activityElement:join('\n        '))
        </activity>
#endif

        @(androidManifest.applicationElement:join('\n        '))
#if @(project.android.geo.apiKey:isSet)
        <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version" />
        <meta-data android:name="com.google.android.geo.API_KEY"
                   android:value="@(project.android.geo.apiKey)"/>
#endif
    </application>
</manifest>
