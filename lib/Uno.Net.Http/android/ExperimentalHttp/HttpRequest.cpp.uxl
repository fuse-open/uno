<Extensions Backend="CPlusPlus" Condition="ANDROID">
    <Using Namespace="Android.com.fuse.ExperimentalHttp" />
    <Type Name="HttpRequest">
        <Require Source.Include="@{Android.Base.AndroidBindingMacros:Include}" />
        <Require Android.Bindings.Bootstrapper.Include="#include <@{Android.com.fuse.ExperimentalHttp.HttpRequest:Include}>" />
        <Require Android.Bindings.Bootstrapper.Statement="@{Android.Base.Types.Bridge.RegisterUnoType(Android.Base.Primitives.ConstCharPtr,int,Uno.Type):Call(&quot;com.fuse.ExperimentalHttp.HttpRequest&quot;,37,@{Android.com.fuse.ExperimentalHttp.HttpRequest:TypeOf})};" />
        <Require Source.Include="@{Android.Base.Wrappers.JWrapper:Include}" />
        <Require Source.Include="@{Android.Base.JNI:Include}" />
        <Require Source.Include="@{Uno.Exception:Include}" />
        <Method Signature="HttpResponseTypeNone_GET_44276():int">
            <Body>
INIT_JNI;
CLASS_INIT(@{_javaClass},@{_Init():Call()});
if (uEnterCriticalIfNull(&@{HttpResponseTypeNone_44276_ID})) {
    CACHE_FIELD(@{HttpResponseTypeNone_44276_ID},@{_javaClass},"HttpResponseTypeNone","I",GetStaticFieldID,"Id for field HttpRequest.HttpResponseTypeNone could not be cached",65);
    uExitCritical();
}
@{int} result;
result = ((@{int})U_JNIVAR->GetStaticIntField(@{_javaClass}, @{HttpResponseTypeNone_44276_ID}));
return result;

</Body>
        </Method>
        <Method Signature="HttpResponseTypeString_GET_44277():int">
            <Body>
INIT_JNI;
CLASS_INIT(@{_javaClass},@{_Init():Call()});
if (uEnterCriticalIfNull(&@{HttpResponseTypeString_44277_ID})) {
    CACHE_FIELD(@{HttpResponseTypeString_44277_ID},@{_javaClass},"HttpResponseTypeString","I",GetStaticFieldID,"Id for field HttpRequest.HttpResponseTypeString could not be cached",67);
    uExitCritical();
}
@{int} result;
result = ((@{int})U_JNIVAR->GetStaticIntField(@{_javaClass}, @{HttpResponseTypeString_44277_ID}));
return result;

</Body>
        </Method>
        <Method Signature="HttpResponseTypeByteArray_GET_44278():int">
            <Body>
INIT_JNI;
CLASS_INIT(@{_javaClass},@{_Init():Call()});
if (uEnterCriticalIfNull(&@{HttpResponseTypeByteArray_44278_ID})) {
    CACHE_FIELD(@{HttpResponseTypeByteArray_44278_ID},@{_javaClass},"HttpResponseTypeByteArray","I",GetStaticFieldID,"Id for field HttpRequest.HttpResponseTypeByteArray could not be cached",70);
    uExitCritical();
}
@{int} result;
result = ((@{int})U_JNIVAR->GetStaticIntField(@{_javaClass}, @{HttpResponseTypeByteArray_44278_ID}));
return result;

</Body>
        </Method>
        <Method Signature="InstallCache_IMPL_44279(Android.Base.Wrappers.IJWrapper,long):bool">
            <Body>
INIT_JNI;
jobject _obArg0 = ((!$0) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($0)._GetJavaObject():Call()});
@{bool} result;
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{InstallCache_44279_ID},@{_javaClass},"InstallCache","(Landroid/app/Activity;J)Z",GetStaticMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.InstallCache could not be cached",93);
result = ((@{bool})U_JNIVAR->CallStaticBooleanMethod(@{_javaClass}, @{InstallCache_44279_ID}, _obArg0, ((jlong)$1)));
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};

return result;

</Body>
        </Method>
        <Method Signature="CacheRenew_IMPL_44280(Android.Base.Wrappers.IJWrapper)">
            <Body>
INIT_JNI;
jobject _obArg0 = ((!$0) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($0)._GetJavaObject():Call()});
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{CacheRenew_44280_ID},@{_javaClass},"CacheRenew","(Landroid/app/Activity;)V",GetStaticMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.CacheRenew could not be cached",91);
U_JNIVAR->CallStaticVoidMethod(@{_javaClass}, @{CacheRenew_44280_ID}, _obArg0);
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="CacheClose_IMPL_44281()">
            <Body>
INIT_JNI;

CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{CacheClose_44281_ID},@{_javaClass},"CacheClose","()V",GetStaticMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.CacheClose could not be cached",91);
U_JNIVAR->CallStaticVoidMethod(@{_javaClass}, @{CacheClose_44281_ID});
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="CacheDelete_IMPL_44282()">
            <Body>
INIT_JNI;

CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{CacheDelete_44282_ID},@{_javaClass},"CacheDelete","()V",GetStaticMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.CacheDelete could not be cached",92);
U_JNIVAR->CallStaticVoidMethod(@{_javaClass}, @{CacheDelete_44282_ID});
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="CacheFlush_IMPL_44283()">
            <Body>
INIT_JNI;

CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{CacheFlush_44283_ID},@{_javaClass},"CacheFlush","()V",GetStaticMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.CacheFlush could not be cached",91);
U_JNIVAR->CallStaticVoidMethod(@{_javaClass}, @{CacheFlush_44283_ID});
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="HttpRequest_IMPL_44284(Android.Base.Wrappers.IJWrapper,Android.Base.Wrappers.IJWrapper,Android.Base.Wrappers.IJWrapper,Android.Base.Wrappers.IJWrapper):Android.Base.Primitives.ujobject">
            <ProcessFile Name="Android_com_fuse_ExperimentalHttp_HttpRequest.java" TargetName="@(Java.SourceDirectory)/com/foreign/Android_com_fuse_ExperimentalHttp_HttpRequest.java" />
            <ProcessFile Name="HttpRequest.java" TargetName="@(Java.SourceDirectory)/com/fuse/ExperimentalHttp/HttpRequest.java" />
            <ProcessFile Name="PRNGFixes.java" TargetName="@(Java.SourceDirectory)/com/fuse/ExperimentalHttp/PRNGFixes.java" />
            <ProcessFile Name="UploadTask.java" TargetName="@(Java.SourceDirectory)/com/fuse/ExperimentalHttp/UploadTask.java" />
            <ProcessFile Name="DownloadTask.java" TargetName="@(Java.SourceDirectory)/com/fuse/ExperimentalHttp/DownloadTask.java" />
            <Body>
INIT_JNI;
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{HttpRequest_44284_ID_c},@{_javaClass},"<init>","(Landroid/app/Activity;Ljava/lang/String;Ljava/lang/String;)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.<init> could not be cached",87);
if ($0) {
    CLASS_INIT(@{_javaProxyClass},@{_InitProxy():Call()});
    CACHE_METHOD(@{HttpRequest_44284_ID_c_prox},@{_javaProxyClass},"<init>","(JLandroid/app/Activity;Ljava/lang/String;Ljava/lang/String;)V",GetMethodID,"Proxy Id for method Android_com_fuse_ExperimentalHttp_HttpRequest.HttpRequest_44284_ID_c_prox could not be cached",113);
}
jobject _obArg1 = ((!$1) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($1)._GetJavaObject():Call()});
jobject _obArg2 = ((!$2) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($2)._GetJavaObject():Call()});
jobject _obArg3 = ((!$3) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($3)._GetJavaObject():Call()});
jobject result;
jobject _tmp;
if (!$0) {
    _tmp = U_JNIVAR->NewObject(@{_javaClass}, @{HttpRequest_44284_ID_c}, _obArg1, _obArg2, _obArg3);
    result = NEW_GLOBAL_REF(jobject,_tmp);
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};
} else {
        _tmp = U_JNIVAR->NewObject(@{_javaProxyClass}, @{HttpRequest_44284_ID_c_prox}, (jlong)$0->__weakptr, _obArg1, _obArg2, _obArg3);
    result = NEW_GLOBAL_REF(jobject,_tmp);
    @{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};
}

U_JNIVAR->DeleteLocalRef(_tmp);
return result;

</Body>
        </Method>
        <Method Signature="SetResponseType_IMPL_44292(bool,Android.Base.Primitives.ujobject,int)">
            <Body>
INIT_JNI;

CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{SetResponseType_44292_ID},@{_javaClass},"SetResponseType","(I)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.SetResponseType could not be cached",96);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{SetResponseType_44292_ID}, ((jint)$2));
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{SetResponseType_44292_ID}, ((jint)$2));
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="SetHeader_IMPL_44293(bool,Android.Base.Primitives.ujobject,Android.Base.Wrappers.IJWrapper,Android.Base.Wrappers.IJWrapper)">
            <Body>
INIT_JNI;
jobject _obArg2 = ((!$2) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($2)._GetJavaObject():Call()});
jobject _obArg3 = ((!$3) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($3)._GetJavaObject():Call()});
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{SetHeader_44293_ID},@{_javaClass},"SetHeader","(Ljava/lang/String;Ljava/lang/String;)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.SetHeader could not be cached",90);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{SetHeader_44293_ID}, _obArg2, _obArg3);
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{SetHeader_44293_ID}, _obArg2, _obArg3);
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="SetTimeout_IMPL_44294(bool,Android.Base.Primitives.ujobject,int)">
            <Body>
INIT_JNI;

CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{SetTimeout_44294_ID},@{_javaClass},"SetTimeout","(I)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.SetTimeout could not be cached",91);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{SetTimeout_44294_ID}, ((jint)$2));
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{SetTimeout_44294_ID}, ((jint)$2));
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="SetCaching_IMPL_44295(bool,Android.Base.Primitives.ujobject,bool)">
            <Body>
INIT_JNI;

CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{SetCaching_44295_ID},@{_javaClass},"SetCaching","(Z)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.SetCaching could not be cached",91);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{SetCaching_44295_ID}, ((jboolean)$2));
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{SetCaching_44295_ID}, ((jboolean)$2));
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="CacheResponseString_IMPL_44296(bool,Android.Base.Primitives.ujobject,Android.Base.Wrappers.IJWrapper)">
            <Body>
INIT_JNI;
jobject _obArg2 = ((!$2) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($2)._GetJavaObject():Call()});
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{CacheResponseString_44296_ID},@{_javaClass},"CacheResponseString","(Ljava/lang/String;)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.CacheResponseString could not be cached",100);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{CacheResponseString_44296_ID}, _obArg2);
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{CacheResponseString_44296_ID}, _obArg2);
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="GetResponseString_IMPL_44297(bool,Android.Base.Primitives.ujobject):Android.Base.Wrappers.IJWrapper">
            <Body>
INIT_JNI;

@{Android.Base.Wrappers.IJWrapper} result;
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{GetResponseString_44297_ID},@{_javaClass},"GetResponseString","()Ljava/lang/String;",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.GetResponseString could not be cached",98);
if ($0) {
    NEW_UNO(U_JNIVAR->CallNonvirtualObjectMethod($1, @{_javaClass}, @{GetResponseString_44297_ID}),result,@{Android.Base.Wrappers.JWrapper:TypeOf},@{Android.Base.Wrappers.JWrapper},false,false);
}
else
{
    NEW_UNO(U_JNIVAR->CallObjectMethod($1, @{GetResponseString_44297_ID}),result,@{Android.Base.Wrappers.JWrapper:TypeOf},@{Android.Base.Wrappers.JWrapper},false,false);
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};

return result;

</Body>
        </Method>
        <Method Signature="SendAsync_IMPL_44299(bool,Android.Base.Primitives.ujobject)">
            <Body>
INIT_JNI;

CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{SendAsync_44299_ID},@{_javaClass},"SendAsync","()V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.SendAsync could not be cached",90);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{SendAsync_44299_ID});
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{SendAsync_44299_ID});
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="SendAsyncBuf_IMPL_44300(bool,Android.Base.Primitives.ujobject,Android.Base.Wrappers.IJWrapper)">
            <Body>
INIT_JNI;
jobject _obArg2 = ((!$2) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($2)._GetJavaObject():Call()});
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{SendAsyncBuf_44300_ID},@{_javaClass},"SendAsyncBuf","(Ljava/nio/ByteBuffer;)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.SendAsyncBuf could not be cached",93);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{SendAsyncBuf_44300_ID}, _obArg2);
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{SendAsyncBuf_44300_ID}, _obArg2);
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="SendAsyncStr_IMPL_44301(bool,Android.Base.Primitives.ujobject,Android.Base.Wrappers.IJWrapper)">
            <Body>
INIT_JNI;
jobject _obArg2 = ((!$2) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($2)._GetJavaObject():Call()});
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{SendAsyncStr_44301_ID},@{_javaClass},"SendAsyncStr","(Ljava/lang/String;)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.SendAsyncStr could not be cached",93);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{SendAsyncStr_44301_ID}, _obArg2);
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{SendAsyncStr_44301_ID}, _obArg2);
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="UploadDone_IMPL_44302(bool,Android.Base.Primitives.ujobject,Android.Base.Wrappers.IJWrapper,Android.Base.Wrappers.IJWrapper,int,Android.Base.Wrappers.IJWrapper)">
            <Body>
INIT_JNI;
jobject _obArg2 = ((!$2) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($2)._GetJavaObject():Call()});
jobject _obArg3 = ((!$3) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($3)._GetJavaObject():Call()});
jobject _obArg5 = ((!$5) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($5)._GetJavaObject():Call()});
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{UploadDone_44302_ID},@{_javaClass},"UploadDone","(Ljava/io/BufferedInputStream;Ljava/util/HashMap;ILjava/lang/String;)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.UploadDone could not be cached",91);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{UploadDone_44302_ID}, _obArg2, _obArg3, ((jint)$4), _obArg5);
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{UploadDone_44302_ID}, _obArg2, _obArg3, ((jint)$4), _obArg5);
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="DownloadDone_IMPL_44303(bool,Android.Base.Primitives.ujobject)">
            <Body>
INIT_JNI;

CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{DownloadDone_44303_ID},@{_javaClass},"DownloadDone","()V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.DownloadDone could not be cached",93);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{DownloadDone_44303_ID});
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{DownloadDone_44303_ID});
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="StartDownload_IMPL_44304(bool,Android.Base.Primitives.ujobject,Android.Base.Wrappers.IJWrapper)">
            <Body>
INIT_JNI;
jobject _obArg2 = ((!$2) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($2)._GetJavaObject():Call()});
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{StartDownload_44304_ID},@{_javaClass},"StartDownload","(Ljava/io/InputStream;)V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.StartDownload could not be cached",94);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{StartDownload_44304_ID}, _obArg2);
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{StartDownload_44304_ID}, _obArg2);
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="Abort_IMPL_44305(bool,Android.Base.Primitives.ujobject)">
            <Body>
INIT_JNI;

CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{Abort_44305_ID},@{_javaClass},"Abort","()V",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.Abort could not be cached",86);
if ($0) {
    U_JNIVAR->CallNonvirtualVoidMethod($1, @{_javaClass}, @{Abort_44305_ID});
}
else
{
    U_JNIVAR->CallVoidMethod($1, @{Abort_44305_ID});
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};


</Body>
        </Method>
        <Method Signature="GetResponseStatus_IMPL_44306(bool,Android.Base.Primitives.ujobject):int">
            <Body>
INIT_JNI;

@{int} result;
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{GetResponseStatus_44306_ID},@{_javaClass},"GetResponseStatus","()I",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.GetResponseStatus could not be cached",98);
if ($0) {
    result = ((@{int})U_JNIVAR->CallNonvirtualIntMethod($1, @{_javaClass}, @{GetResponseStatus_44306_ID}));
}
else
{
    result = ((@{int})U_JNIVAR->CallIntMethod($1, @{GetResponseStatus_44306_ID}));
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};

return result;

</Body>
        </Method>
        <Method Signature="GetResponseHeader_IMPL_44307(bool,Android.Base.Primitives.ujobject,Android.Base.Wrappers.IJWrapper):Android.Base.Wrappers.IJWrapper">
            <Body>
INIT_JNI;
jobject _obArg2 = ((!$2) ? nullptr : @{Android.Base.Wrappers.IJWrapper:Of($2)._GetJavaObject():Call()});
@{Android.Base.Wrappers.IJWrapper} result;
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{GetResponseHeader_44307_ID},@{_javaClass},"GetResponseHeader","(Ljava/lang/String;)Ljava/lang/String;",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.GetResponseHeader could not be cached",98);
if ($0) {
    NEW_UNO(U_JNIVAR->CallNonvirtualObjectMethod($1, @{_javaClass}, @{GetResponseHeader_44307_ID}, _obArg2),result,@{Android.Base.Wrappers.JWrapper:TypeOf},@{Android.Base.Wrappers.JWrapper},false,false);
}
else
{
    NEW_UNO(U_JNIVAR->CallObjectMethod($1, @{GetResponseHeader_44307_ID}, _obArg2),result,@{Android.Base.Wrappers.JWrapper:TypeOf},@{Android.Base.Wrappers.JWrapper},false,false);
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};

return result;

</Body>
        </Method>
        <Method Signature="GetResponseHeaders_IMPL_44308(bool,Android.Base.Primitives.ujobject):Android.Base.Wrappers.IJWrapper">
            <Body>
INIT_JNI;

@{Android.Base.Wrappers.IJWrapper} result;
CLASS_INIT(@{_javaClass},@{_Init():Call()});
CACHE_METHOD(@{GetResponseHeaders_44308_ID},@{_javaClass},"GetResponseHeaders","()Ljava/lang/String;",GetMethodID,"Id for fallback method com.fuse.ExperimentalHttp.HttpRequest.GetResponseHeaders could not be cached",99);
if ($0) {
    NEW_UNO(U_JNIVAR->CallNonvirtualObjectMethod($1, @{_javaClass}, @{GetResponseHeaders_44308_ID}),result,@{Android.Base.Wrappers.JWrapper:TypeOf},@{Android.Base.Wrappers.JWrapper},false,false);
}
else
{
    NEW_UNO(U_JNIVAR->CallObjectMethod($1, @{GetResponseHeaders_44308_ID}),result,@{Android.Base.Wrappers.JWrapper:TypeOf},@{Android.Base.Wrappers.JWrapper},false,false);
}
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};

return result;

</Body>
        </Method>
        <Method Signature="_IsThisType(Android.Base.Wrappers.IJWrapper):bool">
            <Body>int N = 44;
const char* typ = "Android.com.fuse.ExperimentalHttp.HttpRequest";
const char* potential = $0->__type->FullName;
for (int i = 0; i < N; ++i)
{
    if (potential[i]==0 || (potential[i] != typ[i])) {
        return true;
    }
}
return false;
</Body>
        </Method>
        <Method Signature="_Init()">
            <Body>
if (@{_javaClass}) { return; }
INIT_JNI;
@{_javaClass} = NEW_GLOBAL_REF(jclass,LOAD_SYS_CLASS("com/fuse/ExperimentalHttp/HttpRequest"));
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};
if (!@{_javaClass}) { THROW_UNO_EXCEPTION("Unable to cache class 'com.fuse.ExperimentalHttp.HttpRequest'", 61);; }


</Body>
        </Method>
        <Method Signature="_InitProxy()">
            <Body>
if (@{_javaProxyClass}) { return; }
INIT_JNI;
@{_javaProxyClass} = NEW_GLOBAL_REF(jclass,@{Android.Base.JNI.LoadClass(Android.Base.Primitives.JNIEnvPtr,Android.Base.Primitives.ConstCharPtr):Call(jni, "com.foreign.Android_com_fuse_ExperimentalHttp_HttpRequest")});
@{Android.Base.JNI.CheckException(Android.Base.Primitives.JNIEnvPtr):Call(U_JNIVAR)};
if (!@{_javaProxyClass}) { THROW_UNO_EXCEPTION("Unable to cache class 'Android_com_fuse_ExperimentalHttp_HttpRequest'", 69);; }

BEGIN_REG_MTD(7);
#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnDataReceived(Android.Base.Wrappers.IJWrapper,int):IsStripped}
REG_MTD(0,"__n_OnDataReceived","(J[BIJJ)V",::Android_com_fuse_ExperimentalHttp_HttpRequest__OnDataReceived44285);
#endif
#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnAborted():IsStripped}
REG_MTD(1,"__n_OnAborted","(J)V",::Android_com_fuse_ExperimentalHttp_HttpRequest__OnAborted44286);
#endif
#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnError(Android.Base.Wrappers.IJWrapper):IsStripped}
REG_MTD(2,"__n_OnError","(JLjava/lang/String;J)V",::Android_com_fuse_ExperimentalHttp_HttpRequest__OnError44287);
#endif
#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnTimeout():IsStripped}
REG_MTD(3,"__n_OnTimeout","(J)V",::Android_com_fuse_ExperimentalHttp_HttpRequest__OnTimeout44288);
#endif
#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnDone():IsStripped}
REG_MTD(4,"__n_OnDone","(J)V",::Android_com_fuse_ExperimentalHttp_HttpRequest__OnDone44289);
#endif
#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnHeadersReceived():IsStripped}
REG_MTD(5,"__n_OnHeadersReceived","(J)V",::Android_com_fuse_ExperimentalHttp_HttpRequest__OnHeadersReceived44290);
#endif
#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnProgress(int,int,bool):IsStripped}
REG_MTD(6,"__n_OnProgress","(JIIZJJJ)V",::Android_com_fuse_ExperimentalHttp_HttpRequest__OnProgress44291);
#endif
COMMIT_REG_MTD(@{_javaProxyClass});

</Body>
        </Method>
        <Require Source.Declaration>
//~Callbacks forHttpRequest

#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnDataReceived(Android.Base.Wrappers.IJWrapper,int):IsStripped}
JNFUN(void,Android_com_fuse_ExperimentalHttp_HttpRequest__OnDataReceived44285,jlong ujPtr, jobject arg0, jint arg1, jlong arg2, jlong arg3) {
    INITCALLBACK(uPtr,@{Android.com.fuse.ExperimentalHttp.HttpRequest});

    JARG_TO_UNO(arg2,@{Android.Base.Wrappers.IJWrapper},((@{Android.Base.Wrappers.JWrapper})@{Android.Base.Wrappers.JWrapper(Android.Base.Primitives.ujobject,Uno.Type,bool,bool,bool):New(arg0,(@{Uno.Type})@{Android.Base.Wrappers.JWrapper:TypeOf}, false, false, true)}));

    JTRY
    @{Android.com.fuse.ExperimentalHttp.HttpRequest:Of(uPtr).OnDataReceived(Android.Base.Wrappers.IJWrapper,int):Call(tmparg2, ((@{int})arg1))};

    JCATCH
}
#endif

#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnAborted():IsStripped}
JNFUN(void,Android_com_fuse_ExperimentalHttp_HttpRequest__OnAborted44286,jlong ujPtr) {
    INITCALLBACK(uPtr,@{Android.com.fuse.ExperimentalHttp.HttpRequest});
    JTRY
    @{Android.com.fuse.ExperimentalHttp.HttpRequest:Of(uPtr).OnAborted():Call()};
    JCATCH
}
#endif

#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnError(Android.Base.Wrappers.IJWrapper):IsStripped}
JNFUN(void,Android_com_fuse_ExperimentalHttp_HttpRequest__OnError44287,jlong ujPtr, jobject arg0, jlong arg1) {
    INITCALLBACK(uPtr,@{Android.com.fuse.ExperimentalHttp.HttpRequest});
    JARG_TO_UNO(arg1,@{Android.Base.Wrappers.IJWrapper},((@{Android.Base.Wrappers.JWrapper})@{Android.Base.Wrappers.JWrapper(Android.Base.Primitives.ujobject,Uno.Type,bool,bool,bool):New(arg0,(@{Uno.Type})@{Android.Base.Wrappers.JWrapper:TypeOf}, false, false, true)}));
    JTRY
    @{Android.com.fuse.ExperimentalHttp.HttpRequest:Of(uPtr).OnError(Android.Base.Wrappers.IJWrapper):Call(tmparg1)};
    JCATCH
}
#endif

#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnTimeout():IsStripped}
JNFUN(void,Android_com_fuse_ExperimentalHttp_HttpRequest__OnTimeout44288,jlong ujPtr) {
    INITCALLBACK(uPtr,@{Android.com.fuse.ExperimentalHttp.HttpRequest});
    JTRY
    @{Android.com.fuse.ExperimentalHttp.HttpRequest:Of(uPtr).OnTimeout():Call()};
    JCATCH
}
#endif

#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnDone():IsStripped}
JNFUN(void,Android_com_fuse_ExperimentalHttp_HttpRequest__OnDone44289,jlong ujPtr) {
    INITCALLBACK(uPtr,@{Android.com.fuse.ExperimentalHttp.HttpRequest});
    JTRY
    @{Android.com.fuse.ExperimentalHttp.HttpRequest:Of(uPtr).OnDone():Call()};
    JCATCH
}
#endif

#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnHeadersReceived():IsStripped}
JNFUN(void,Android_com_fuse_ExperimentalHttp_HttpRequest__OnHeadersReceived44290,jlong ujPtr) {
    INITCALLBACK(uPtr,@{Android.com.fuse.ExperimentalHttp.HttpRequest});
    JTRY
    @{Android.com.fuse.ExperimentalHttp.HttpRequest:Of(uPtr).OnHeadersReceived():Call()};
    JCATCH
}
#endif

#if !@{Android.com.fuse.ExperimentalHttp.HttpRequest.OnProgress(int,int,bool):IsStripped}
JNFUN(void,Android_com_fuse_ExperimentalHttp_HttpRequest__OnProgress44291,jlong ujPtr, jint arg0, jint arg1, jboolean arg2, jlong arg3, jlong arg4, jlong arg5) {
    INITCALLBACK(uPtr,@{Android.com.fuse.ExperimentalHttp.HttpRequest});
    JTRY
    @{Android.com.fuse.ExperimentalHttp.HttpRequest:Of(uPtr).OnProgress(int,int,bool):Call(((@{int})arg0), ((@{int})arg1), ((@{bool})arg2))};
    JCATCH
}
#endif
</Require>
    </Type>
</Extensions>
